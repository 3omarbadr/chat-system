version: "3.0"

volumes:
  mysql_data:
  elasticsearch_data:
  redis_data:

services:
  db:
    image: "mysql/mysql-server:8.0"
    container_name: chat-system-db
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chat-system
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    expose:
      - 3306

  web:
    build: .
    container_name: chat-system
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    volumes:
      - ".:/chat-system"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - elasticsearch
    environment:
      DB_USER: root
      DB_NAME: chat-system
      DB_PASSWORD: password
      DB_HOST: db
      DB_PORT: 3306

  redis:
    image: redis:alpine
    container_name: chat-system-redis
    expose:
      - 6379
    volumes:
      - redis_data:/var/lib/redis/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    container_name: chat-system-elasticsearch
    volumes:
      - elasticsearch_data:/var/lib/elasticsearch
    expose:
      - 9200
    environment:
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - bootstrap.memory_lock=true
      - discovery.type=single-node

  sidekiq:
    build: .
    command: bundle exec sidekiq
    volumes:
      - ".:/chat-system"
    environment:
      RAILS_ENV: development
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DB_USER: root
      DB_NAME: chat-system
      DB_PASSWORD: password
      DB_HOST: db
      DB_PORT: 3306
    depends_on:
      - redis
